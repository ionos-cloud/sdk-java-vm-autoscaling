/*
 * VM Auto Scaling API
 * The VM Auto Scaling Service enables IONOS clients to horizontally scale the number of VM replicas based on configured rules. You can use VM Auto Scaling to ensure that you have a sufficient number of replicas to handle your application loads at all times.  For this purpose, create a VM Auto Scaling Group that contains the server replicas. The VM Auto Scaling Service ensures that the number of replicas in the group is always within the defined limits.   When scaling policies are set, VM Auto Scaling creates or deletes replicas according to the requirements of your applications. For each policy, specified 'scale-in' and 'scale-out' actions are performed when the corresponding thresholds are reached.
 *
 * The version of the OpenAPI document: 1-SDK.1
 * Contact: support@cloud.ionos.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.vmautoscaling.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ionoscloud.vmautoscaling.model.GroupPolicyScaleInAction;
import com.ionoscloud.vmautoscaling.model.GroupPolicyScaleOutAction;
import com.ionoscloud.vmautoscaling.model.Metric;
import com.ionoscloud.vmautoscaling.model.QueryUnit;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Defines the behavior of this VM Auto Scaling Group. A policy consists of triggers and actions, where an action is an automated behavior, and the trigger defines the circumstances under which the action is triggered. Currently, two separate actions are supported, namely scaling inward and outward, triggered by the thresholds defined for a particular metric.
 */
@ApiModel(description = "Defines the behavior of this VM Auto Scaling Group. A policy consists of triggers and actions, where an action is an automated behavior, and the trigger defines the circumstances under which the action is triggered. Currently, two separate actions are supported, namely scaling inward and outward, triggered by the thresholds defined for a particular metric.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-25T09:34:22.361740Z[Etc/UTC]")

public class GroupPolicy {
  
  public static final String SERIALIZED_NAME_METRIC = "metric";
  @SerializedName(SERIALIZED_NAME_METRIC)
  private Metric metric;


  public static final String SERIALIZED_NAME_RANGE = "range";
  @SerializedName(SERIALIZED_NAME_RANGE)
  private String range = "120s";


  public static final String SERIALIZED_NAME_SCALE_IN_ACTION = "scaleInAction";
  @SerializedName(SERIALIZED_NAME_SCALE_IN_ACTION)
  private GroupPolicyScaleInAction scaleInAction;


  public static final String SERIALIZED_NAME_SCALE_IN_THRESHOLD = "scaleInThreshold";
  @SerializedName(SERIALIZED_NAME_SCALE_IN_THRESHOLD)
  private BigDecimal scaleInThreshold;


  public static final String SERIALIZED_NAME_SCALE_OUT_ACTION = "scaleOutAction";
  @SerializedName(SERIALIZED_NAME_SCALE_OUT_ACTION)
  private GroupPolicyScaleOutAction scaleOutAction;


  public static final String SERIALIZED_NAME_SCALE_OUT_THRESHOLD = "scaleOutThreshold";
  @SerializedName(SERIALIZED_NAME_SCALE_OUT_THRESHOLD)
  private BigDecimal scaleOutThreshold;


  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private QueryUnit unit = QueryUnit.TOTAL;

  

  public GroupPolicy metric(Metric metric) {
    
    this.metric = metric;
    return this;
  }

   /**
   * Get metric
   * @return metric
  **/
  @ApiModelProperty(required = true, value = "")

  public Metric getMetric() {
    return metric;
  }


  public void setMetric(Metric metric) {
    this.metric = metric;
  }



  public GroupPolicy range(String range) {
    
    this.range = range;
    return this;
  }

   /**
   * Specifies the time range for which the samples are to be aggregated. Must be &gt;&#x3D; 2 minutes.
   * @return range
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "P1D", value = "Specifies the time range for which the samples are to be aggregated. Must be >= 2 minutes.")

  public String getRange() {
    return range;
  }


  public void setRange(String range) {
    this.range = range;
  }



  public GroupPolicy scaleInAction(GroupPolicyScaleInAction scaleInAction) {
    
    this.scaleInAction = scaleInAction;
    return this;
  }

   /**
   * Get scaleInAction
   * @return scaleInAction
  **/
  @ApiModelProperty(required = true, value = "")

  public GroupPolicyScaleInAction getScaleInAction() {
    return scaleInAction;
  }


  public void setScaleInAction(GroupPolicyScaleInAction scaleInAction) {
    this.scaleInAction = scaleInAction;
  }



  public GroupPolicy scaleInThreshold(BigDecimal scaleInThreshold) {
    
    this.scaleInThreshold = scaleInThreshold;
    return this;
  }

   /**
   * The lower threshold for the value of the &#39;metric&#39;. Used with the &#x60;less than&#x60; (&lt;) operator. When this value is exceeded, a scale-in action is triggered, specified by the &#39;scaleInAction&#39; property. The value must have a higher minimum delta to the &#39;scaleOutThreshold&#39;, depending on the &#39;metric&#39;, to avoid competing for actions at the same time.
   * @return scaleInThreshold
  **/
  @ApiModelProperty(example = "33", required = true, value = "The lower threshold for the value of the 'metric'. Used with the `less than` (<) operator. When this value is exceeded, a scale-in action is triggered, specified by the 'scaleInAction' property. The value must have a higher minimum delta to the 'scaleOutThreshold', depending on the 'metric', to avoid competing for actions at the same time.")

  public BigDecimal getScaleInThreshold() {
    return scaleInThreshold;
  }


  public void setScaleInThreshold(BigDecimal scaleInThreshold) {
    this.scaleInThreshold = scaleInThreshold;
  }



  public GroupPolicy scaleOutAction(GroupPolicyScaleOutAction scaleOutAction) {
    
    this.scaleOutAction = scaleOutAction;
    return this;
  }

   /**
   * Get scaleOutAction
   * @return scaleOutAction
  **/
  @ApiModelProperty(required = true, value = "")

  public GroupPolicyScaleOutAction getScaleOutAction() {
    return scaleOutAction;
  }


  public void setScaleOutAction(GroupPolicyScaleOutAction scaleOutAction) {
    this.scaleOutAction = scaleOutAction;
  }



  public GroupPolicy scaleOutThreshold(BigDecimal scaleOutThreshold) {
    
    this.scaleOutThreshold = scaleOutThreshold;
    return this;
  }

   /**
   * The upper threshold for the value of the &#39;metric&#39;. Used with the &#39;greater than&#39; (&gt;) operator. A scale-out action is triggered when this value is exceeded, specified by the &#39;scaleOutAction&#39; property. The value must have a lower minimum delta to the &#39;scaleInThreshold&#39;, depending on the metric, to avoid competing for actions simultaneously. If &#39;properties.policy.unit&#x3D;TOTAL&#39;, a value &gt;&#x3D; 40 must be chosen.
   * @return scaleOutThreshold
  **/
  @ApiModelProperty(example = "77", required = true, value = "The upper threshold for the value of the 'metric'. Used with the 'greater than' (>) operator. A scale-out action is triggered when this value is exceeded, specified by the 'scaleOutAction' property. The value must have a lower minimum delta to the 'scaleInThreshold', depending on the metric, to avoid competing for actions simultaneously. If 'properties.policy.unit=TOTAL', a value >= 40 must be chosen.")

  public BigDecimal getScaleOutThreshold() {
    return scaleOutThreshold;
  }


  public void setScaleOutThreshold(BigDecimal scaleOutThreshold) {
    this.scaleOutThreshold = scaleOutThreshold;
  }



  public GroupPolicy unit(QueryUnit unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @ApiModelProperty(required = true, value = "")

  public QueryUnit getUnit() {
    return unit;
  }


  public void setUnit(QueryUnit unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupPolicy groupPolicy = (GroupPolicy) o;
    return Objects.equals(this.metric, groupPolicy.metric) && Objects.equals(this.range, groupPolicy.range) && Objects.equals(this.scaleInAction, groupPolicy.scaleInAction) && Objects.equals(this.scaleInThreshold, groupPolicy.scaleInThreshold) && Objects.equals(this.scaleOutAction, groupPolicy.scaleOutAction) && Objects.equals(this.scaleOutThreshold, groupPolicy.scaleOutThreshold) && Objects.equals(this.unit, groupPolicy.unit);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupPolicy {\n");
    
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");

    sb.append("    range: ").append(toIndentedString(range)).append("\n");

    sb.append("    scaleInAction: ").append(toIndentedString(scaleInAction)).append("\n");

    sb.append("    scaleInThreshold: ").append(toIndentedString(scaleInThreshold)).append("\n");

    sb.append("    scaleOutAction: ").append(toIndentedString(scaleOutAction)).append("\n");

    sb.append("    scaleOutThreshold: ").append(toIndentedString(scaleOutThreshold)).append("\n");

    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

